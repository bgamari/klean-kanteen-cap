// Length refers to axial distance

// Threads
thread_major_diam = 43.5;
thread_minor_diam = 39.5;
thread_height = 2.8; // axial height
thread_pitch = 6.25;
thread_length = 20;

// Thickness of wall
wall_thickness = 2.5;

// Unthreaded region above threads 
neck_length = 7;

// Top seal
seal_diam = 2;
seal_inset = 0.0;

// Flared out top
top_diam = 50;
top_length = 20;

module cap() {
    difference() {
        union() {
            cylinder(r=thread_minor_diam/2, h=thread_length+neck_length);

            // Threads
            rotate_extrude(360*thread_length/thread_pitch, translate=[0,thread_length])
            translate([thread_minor_diam/2, 0])
            square([(thread_major_diam - thread_minor_diam) / 2, thread_height]);

            // top
            scale([1.1,0.9,1])
            translate([0,0,thread_length+neck_length])
            intersection() {
                cylinder(r=top_diam/2, h=top_length);
                sphere(r=1.0*top_diam/2);
            }

            // handle
            translate([15, 0, thread_length+neck_length+top_length-4])
            rotate([0,30,0])
            intersection() {
                difference() {
                    scale([0.8, 1, 1])
                    cylinder(r=10, h=28);

                    // Hole
                    translate([0,0,20])
                    rotate([0, 90, 0])
                    rotate_extrude() translate([10,0]) circle(r=5);
                }

                // Round top
                translate([0, 0, -0])
                sphere(r=18);
            }
        }

        // Seal recess
        translate([0, 0, thread_length+neck_length-seal_diam/2])
        rotate_extrude()
        translate([thread_minor_diam/2-seal_inset, 0])
        circle(r=seal_diam/2);

        // Hollow out interior
        translate([0,0,-1])
        cylinder(r=thread_minor_diam/2 - wall_thickness, h=thread_length+neck_length-5);
        translate([0,0,thread_length+neck_length-5])
        sphere(r=thread_minor_diam/2 - wall_thickness);
    }
}

union() {
    cap();
}
